class1 숫자 맞추기 게임 만들기
import random  # random 모듈을 불러와서 난수 생성 기능을 사용할 수 있게 한다.

# 1부터 100 사이의 정수를 무작위로 선택하여 random_number 변수에 저장한다.
random_number = random.randint(1, 100)

# 생성된 무작위 정수를 출력한다.
print(random_number)

코드 설명
1. import random
- 파이썬의 내장 모듈인 random을 가져와서 난수 생성 관련 함수를 사용할 수 있게 한다.

2. random_number = random.randint(1, 100)
- random.randint(1, 100) 함수는 1부터 100 사이의 정수(양 끝 포함)를 무작위로 생성한다.
- 생성된 정수는 random_number 변수에 할당된다.

3. print(random_number)
-변수 random_number에 저장된 무작위 정수를 콘솔에 출력한다.

이 코드는 간단하게 1부터 100 사이의 임의의 숫자를 생성해서 출력하는 역할을 한다.

main1-2.py
import random  # 난수 생성을 위한 random 모듈을 불러온다.

# 1부터 100 사이의 정수를 무작위로 선택하여 random_number 변수에 저장한다.
random_number = random.randint(1, 100)

# print(random_number)  # 디버깅용으로 선택된 숫자를 출력할 수 있지만, 현재는 주석 처리되어 있다.

game_count = 1  # 사용자의 추측 횟수를 기록하기 위한 변수이다.

# 무한 루프를 시작한다.
while True:
    # 사용자로부터 1~100 사이의 숫자를 입력받아 정수형으로 변환한다.
    my_number = int(input("1~100 사이의 숫자를 입력하세요:"))
    
    # 사용자가 입력한 숫자가 random_number보다 클 경우 '다운' 메시지를 출력한다.
    if my_number > random_number:
        print("다운")
    # 입력한 숫자가 random_number보다 작을 경우 '업' 메시지를 출력한다.
    elif my_number < random_number:
        print("업")
    # 입력한 숫자가 random_number와 같으면 축하 메시지를 출력하고 루프를 종료한다.
    elif my_number == random_number:
        print(f"축하합니다. {game_count}회 만에 맞췄습니다")
        break  # 정답을 맞췄으므로 반복문을 종료합니다.
    
    # 한 번의 시도가 끝날 때마다 시도 횟수를 1 증가한다.
    game_count = game_count + 1

코드 설명
1. 난수 생성:
- random.randint(1, 100)를 사용해 1부터 100 사이의 임의의 정수를 생성한다.

2. 게임 루프:
- while True 무한 루프를 통해 사용자가 올바른 숫자를 입력할 때까지 계속해서 입력을 받고,
  입력 값이 정답보다 크면 "다운" (즉, 숫자를 낮추세요)
  입력 값이 정답보다 작으면 "업" (즉, 숫자를 높이세요)
  정답을 맞추면 축하 메시지를 출력하고 루프를 종료한다.

3. 시도 횟수:
- game_count 변수를 통해 사용자가 몇 번의 시도로 정답에 도달했는지를 기록다.

main1-3.py
import random  # 난수 생성 기능을 제공하는 random 모듈을 가져옵니다.

# 1부터 100 사이의 임의의 정수를 생성하여 random_number 변수에 저장한다.
random_number = random.randint(1, 100)

# print(random_number)  # 디버깅 용도로 생성된 난수를 확인할 수 있으나, 현재는 주석 처리되어 있다.

game_count = 1  # 사용자가 시도한 횟수를 기록하기 위한 변수이다.

# 사용자에게 계속해서 숫자 입력을 받기 위해 무한 루프를 시작한다.
while True:
    try:
        # 사용자로부터 1~100 사이의 숫자를 입력받고, 정수형으로 변환한다.
        my_number = int(input("1~100 사이의 숫자를 입력하세요:"))
        
        # 사용자가 입력한 숫자가 생성된 난수보다 큰 경우, "다운"을 출력한다.
        if my_number > random_number:
            print("다운")
        # 입력한 숫자가 난수보다 작으면 "업"을 출력한다.
        elif my_number < random_number:
            print("업")
        # 입력한 숫자가 난수와 같으면, 축하 메시지를 출력하고 반복문을 종료한다.
        elif my_number == random_number:
            print(f"축하합니다. {game_count}회 만에 맞췄습니다")
            break  # 정답을 찾았으므로 루프를 종료한다.
        
        # 한 번의 시도 후, 시도 횟수를 1 증가한다.
        game_count = game_count + 1
        
    except:
        # 숫자가 아닌 값 등을 입력하여 변환 오류가 발생하면 예외 처리하여 에러 메시지를 출력다.
        print("에러가 발생하였습니다. 숫자를 입력하세요")

코드 설명
1. 난수 생성 및 변수 초기화:
- random.randint(1, 100) 함수를 사용해 1부터 100 사이의 임의의 정수를 생성하고,
  이를 random_number에 저장한다. 또한, game_count 변수를 1로 초기화하여 사용자의 시도 횟수를 추적한다.

2. 무한 루프와 예외 처리:
- while True 무한 루프 안에서 사용자에게 숫자 입력을 요청한다.
  입력값을 정수로 변환할 때, 만약 올바르지 않은 입력(예: 문자열, 공백 등)이 들어오면 예외가 발생하여 except 블록이 실행되고,
  사용자에게 에러 메시지가 출력된다.

3. 입력값 비교:
- 입력한 숫자(my_number)가 random_number보다 크면 "다운", 작으면 "업"을 출력하여 사용자가 정답에 더 가까워지도록 힌트를 제공한다.
  정답을 맞출 경우 축하 메시지를 출력하고 반복문을 종료한다.
